# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
          
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: db_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask
          pip install flask_mysqldb
          pip install flake8 pytest
          pip install mysql-connector-python
          pip install mock
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-server mysql-client
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -ppassword -e "SHOW DATABASES" 
          
      - name: Run Unit Tests 
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: db_test
          DB_PORT: 3306
          DB_USER: root
          DB_HOST: 127.0.0.1
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          python Frontend/Project/src/app/tests.py
          
  test-container:
      runs-on: ubuntu-latest
      container: ubuntu
      services:
        mysql:
          image: mysql:5.7
          env:
            MYSQL_ROOT_PASSWORD: password
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
      steps:
        - name: Verify MySQL connection from container
          run: |
            apt-get update && apt-get install -y mysql-client
            mysql --host mysql -uroot -ppassword -e "SHOW DATABASES"
      
  
